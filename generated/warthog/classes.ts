// This file has been auto-generated by Warthog.  Do not update directly as it
// will be re-written.  If you need to change this file, update models or add
// new TypeGraphQL objects
// prettier-ignore
// @ts-ignore
import { DateResolver as Date } from 'graphql-scalars';
// prettier-ignore
// @ts-ignore
import { GraphQLID as ID } from 'graphql';
// prettier-ignore
// @ts-ignore
import { ArgsType, Field as TypeGraphQLField, Float, InputType as TypeGraphQLInputType, Int } from 'type-graphql';
// prettier-ignore
// @ts-ignore
import { registerEnumType, GraphQLISODateTime as DateTime } from "type-graphql";

import * as BN from "bn.js";

// prettier-ignore
// @ts-ignore eslint-disable-next-line @typescript-eslint/no-var-requires
const { GraphQLJSONObject } = require('graphql-type-json');
// prettier-ignore
// @ts-ignore
import { BaseWhereInput, JsonObject, PaginationArgs, DateOnlyString, DateTimeString, BigInt, Bytes } from '@subsquid/warthog';

// @ts-ignore
import { Contributor } from "../modules/contributor/contributor.model";
// @ts-ignore
import { Contribution } from "../modules/contribution/contribution.model";

export enum ContributorOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  totalContributed_ASC = "totalContributed_ASC",
  totalContributed_DESC = "totalContributed_DESC",

  paraId_ASC = "paraId_ASC",
  paraId_DESC = "paraId_DESC",

  countContributions_ASC = "countContributions_ASC",
  countContributions_DESC = "countContributions_DESC",
}

registerEnumType(ContributorOrderByEnum, {
  name: "ContributorOrderByInput",
});

@TypeGraphQLInputType()
export class ContributorWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  totalContributed_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  totalContributed_in?: string[];

  @TypeGraphQLField(() => Int, { nullable: true })
  paraId_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  paraId_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  paraId_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  paraId_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  paraId_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  paraId_in?: number[];

  @TypeGraphQLField(() => Int, { nullable: true })
  countContributions_eq?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  countContributions_gt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  countContributions_gte?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  countContributions_lt?: number;

  @TypeGraphQLField(() => Int, { nullable: true })
  countContributions_lte?: number;

  @TypeGraphQLField(() => [Int], { nullable: true })
  countContributions_in?: number[];

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_none?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_some?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  contributions_every?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributorWhereInput, { nullable: true })
  AND?: [ContributorWhereInput];

  @TypeGraphQLField(() => ContributorWhereInput, { nullable: true })
  OR?: [ContributorWhereInput];
}

@TypeGraphQLInputType()
export class ContributorWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ContributorCreateInput {
  @TypeGraphQLField({ nullable: true })
  totalContributed?: string;

  @TypeGraphQLField()
  paraId!: number;

  @TypeGraphQLField({ nullable: true })
  countContributions?: number;
}

@TypeGraphQLInputType()
export class ContributorUpdateInput {
  @TypeGraphQLField({ nullable: true })
  totalContributed?: string;

  @TypeGraphQLField({ nullable: true })
  paraId?: number;

  @TypeGraphQLField({ nullable: true })
  countContributions?: number;
}

@ArgsType()
export class ContributorWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ContributorWhereInput, { nullable: true })
  where?: ContributorWhereInput;

  @TypeGraphQLField(() => ContributorOrderByEnum, { nullable: true })
  orderBy?: ContributorOrderByEnum[];
}

@ArgsType()
export class ContributorCreateManyArgs {
  @TypeGraphQLField(() => [ContributorCreateInput])
  data!: ContributorCreateInput[];
}

@ArgsType()
export class ContributorUpdateArgs {
  @TypeGraphQLField() data!: ContributorUpdateInput;
  @TypeGraphQLField() where!: ContributorWhereUniqueInput;
}

export enum ContributionOrderByEnum {
  createdAt_ASC = "createdAt_ASC",
  createdAt_DESC = "createdAt_DESC",

  updatedAt_ASC = "updatedAt_ASC",
  updatedAt_DESC = "updatedAt_DESC",

  deletedAt_ASC = "deletedAt_ASC",
  deletedAt_DESC = "deletedAt_DESC",

  account_ASC = "account_ASC",
  account_DESC = "account_DESC",

  balance_ASC = "balance_ASC",
  balance_DESC = "balance_DESC",

  blockNumber_ASC = "blockNumber_ASC",
  blockNumber_DESC = "blockNumber_DESC",

  extrinsicHash_ASC = "extrinsicHash_ASC",
  extrinsicHash_DESC = "extrinsicHash_DESC",

  earlyBird_ASC = "earlyBird_ASC",
  earlyBird_DESC = "earlyBird_DESC",

  prevContributed_ASC = "prevContributed_ASC",
  prevContributed_DESC = "prevContributed_DESC",

  referralCode_ASC = "referralCode_ASC",
  referralCode_DESC = "referralCode_DESC",
}

registerEnumType(ContributionOrderByEnum, {
  name: "ContributionOrderByInput",
});

@TypeGraphQLInputType()
export class ContributionWhereInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  id_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  id_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  createdAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  createdById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  createdById_in?: string[];

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  updatedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  updatedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  updatedById_in?: string[];

  @TypeGraphQLField({ nullable: true })
  deletedAt_all?: Boolean;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_eq?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_lte?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gt?: Date;

  @TypeGraphQLField(() => DateTime, { nullable: true })
  deletedAt_gte?: Date;

  @TypeGraphQLField(() => ID, { nullable: true })
  deletedById_eq?: string;

  @TypeGraphQLField(() => [ID], { nullable: true })
  deletedById_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  balance_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  balance_in?: string[];

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockNumber_eq?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockNumber_gt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockNumber_gte?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockNumber_lt?: string;

  @TypeGraphQLField(() => BigInt, { nullable: true })
  blockNumber_lte?: string;

  @TypeGraphQLField(() => [BigInt], { nullable: true })
  blockNumber_in?: string[];

  @TypeGraphQLField({ nullable: true })
  extrinsicHash_eq?: string;

  @TypeGraphQLField({ nullable: true })
  extrinsicHash_contains?: string;

  @TypeGraphQLField({ nullable: true })
  extrinsicHash_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  extrinsicHash_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  extrinsicHash_in?: string[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  earlyBird_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  earlyBird_in?: Boolean[];

  @TypeGraphQLField(() => Boolean, { nullable: true })
  prevContributed_eq?: Boolean;

  @TypeGraphQLField(() => [Boolean], { nullable: true })
  prevContributed_in?: Boolean[];

  @TypeGraphQLField({ nullable: true })
  referralCode_eq?: string;

  @TypeGraphQLField({ nullable: true })
  referralCode_contains?: string;

  @TypeGraphQLField({ nullable: true })
  referralCode_startsWith?: string;

  @TypeGraphQLField({ nullable: true })
  referralCode_endsWith?: string;

  @TypeGraphQLField(() => [String], { nullable: true })
  referralCode_in?: string[];

  @TypeGraphQLField(() => ContributorWhereInput, { nullable: true })
  account?: ContributorWhereInput;

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  AND?: [ContributionWhereInput];

  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  OR?: [ContributionWhereInput];
}

@TypeGraphQLInputType()
export class ContributionWhereUniqueInput {
  @TypeGraphQLField(() => ID)
  id?: string;
}

@TypeGraphQLInputType()
export class ContributionCreateInput {
  @TypeGraphQLField(() => ID)
  account!: string;

  @TypeGraphQLField({ nullable: true })
  balance?: string;

  @TypeGraphQLField()
  blockNumber!: string;

  @TypeGraphQLField()
  extrinsicHash!: string;

  @TypeGraphQLField({ nullable: true })
  earlyBird?: boolean;

  @TypeGraphQLField({ nullable: true })
  prevContributed?: boolean;

  @TypeGraphQLField({ nullable: true })
  referralCode?: string;
}

@TypeGraphQLInputType()
export class ContributionUpdateInput {
  @TypeGraphQLField(() => ID, { nullable: true })
  account?: string;

  @TypeGraphQLField({ nullable: true })
  balance?: string;

  @TypeGraphQLField({ nullable: true })
  blockNumber?: string;

  @TypeGraphQLField({ nullable: true })
  extrinsicHash?: string;

  @TypeGraphQLField({ nullable: true })
  earlyBird?: boolean;

  @TypeGraphQLField({ nullable: true })
  prevContributed?: boolean;

  @TypeGraphQLField({ nullable: true })
  referralCode?: string;
}

@ArgsType()
export class ContributionWhereArgs extends PaginationArgs {
  @TypeGraphQLField(() => ContributionWhereInput, { nullable: true })
  where?: ContributionWhereInput;

  @TypeGraphQLField(() => ContributionOrderByEnum, { nullable: true })
  orderBy?: ContributionOrderByEnum[];
}

@ArgsType()
export class ContributionCreateManyArgs {
  @TypeGraphQLField(() => [ContributionCreateInput])
  data!: ContributionCreateInput[];
}

@ArgsType()
export class ContributionUpdateArgs {
  @TypeGraphQLField() data!: ContributionUpdateInput;
  @TypeGraphQLField() where!: ContributionWhereUniqueInput;
}
